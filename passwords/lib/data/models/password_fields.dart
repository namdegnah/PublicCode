import '../../domain/entities/password_field.dart';
import '../../presentation/config/constants.dart';
// either strong or medium password must be selected so set to Strong via 11000011 and if removed automatically set medium password to true etc
// or one password that can be strong, medium or weak, it is the validation
// can the validation for the field be held in a new table that has typeId and PasswordFieldId and which type of validationIndex, length etc
List<PasswordField> passwordFields = <PasswordField>[
  PasswordField(
    id: PasswordFieldsNumbers.password.index, //0
    name: 'password',
    description: "Password, can be Strong, Medium or Weak, see the descriptions below for the validation that is applied when you enter your password. Select either a strong medium or weak password",
    hintText: "Enter your password",
    errorText: "must be a valid password",
    length: 8,
    validationIndex: Validators.strongPasswordValidator.index,
    previousEnabled: false,
    nextEnabled: true,
    addEnabled: true,
    removeEnabled: false,
    widgetId: 1,
  ),
  PasswordField(
    id: PasswordFieldsNumbers.description.index, //1
    name: 'Description',
    description: "This is the text description of the password, it is a required field",
    hintText: "Enter your description",
    errorText: "enter a description",
    length: -1,
    validationIndex: Validators.isRequired.index,
    previousEnabled: true,
    nextEnabled: true,
    addEnabled: false,
    removeEnabled: false,     
  ), 
  PasswordField(
    id: PasswordFieldsNumbers.url.index, //2
    name: 'URL',
    description: "This is the url (website address) for the password. It must contain a valid url",
    hintText: "This is website address",
    errorText: "must be a valid url, start with http:// or wwww.",
    length: -1,
    validationIndex: Validators.urlValidator.index,
    previousEnabled: true,
    nextEnabled: true,
    addEnabled: true,
    removeEnabled: false,     
  ), 
  PasswordField(
    id: PasswordFieldsNumbers.username.index, //3
    name: 'username',
    description: "The user name associated with this password, typical for websites and applications, it must contain at least 2 characters",
    hintText: "Enter your username",
    errorText: "user name must contain at least 2 characters",
    length: 2,
    validationIndex: Validators.requiredAndLength.index,
    previousEnabled: true,
    nextEnabled: true,
    addEnabled: true,
    removeEnabled: false,    
  ), 
  PasswordField(
    id: PasswordFieldsNumbers.email.index, //4
    name: 'email',
    description: "The email associated with this password, typical for websites and applications, it must contain a valid email, requires x@x.x. For example name@gmail.com",
    hintText: "Enter your email",
    errorText: "must contain a valid email address",
    length: -1,
    validationIndex: Validators.emailValidator.index,
    previousEnabled: true,
    nextEnabled: true,
    addEnabled: true,
    removeEnabled: false,    
  ), 
  PasswordField(
    id: PasswordFieldsNumbers.accountNumber.index, //5
    name: 'account number',
    description: "The account number associated with this password, typical for financial websites and applications, it must contain at least 2 characters",
    hintText: "Enter your account number",
    errorText: "account number must contain at least 2 characters",
    length: 2,
    validationIndex: Validators.requiredAndLength.index,
    previousEnabled: true,
    nextEnabled: true,
    addEnabled: true,
    removeEnabled: false,    
  ), 
  PasswordField(
    id: PasswordFieldsNumbers.pin.index, //6
    name: 'PIN',
    description: "The 4 number PIN associated with this password, typical for financial websites and applications, it must contain at exactly 4 numbers",
    hintText: "Enter your PIN",
    errorText: "must contain 4 numbers",
    length: 4,
    validationIndex: Validators.requiredAndLength.index,
    formatterIndex: Formatters.justNumberFormatter.index,
    previousEnabled: true,
    nextEnabled: true,
    addEnabled: true,
    removeEnabled: false,    
  ),
  PasswordField(
    id: PasswordFieldsNumbers.sortCode.index, //7
    name: 'sort code',
    description: "The sort associated with this password, typical for financial websites and applications, it must contain exactly 6 numbers",
    hintText: "Enter a sort code for your account",
    errorText: "must contain only numbers and exactly 6 numbers",
    length: 6,
    validationIndex: Validators.requiredAndLength.index,
    formatterIndex: Formatters.sortCodeFormatter.index,
    previousEnabled: true,
    nextEnabled: true,
    addEnabled: true,
    removeEnabled: false,    
  ), 
  PasswordField(
    id: PasswordFieldsNumbers.digit3SecurityCode.index, //8
    name: '3 digit security code',
    description: "The security code associated with this password, typical for credit cards, must be 3 numbers",
    hintText: "Enter a security code",
    errorText: "must contain at exactly 3 numbers",
    length: 3,
    validationIndex: Validators.requiredAndLength.index,
    formatterIndex: Formatters.justNumberFormatter.index,
    previousEnabled: true,
    nextEnabled: true,
    addEnabled: true,
    removeEnabled: false,    
  ),
  PasswordField(
    id: PasswordFieldsNumbers.digit4SecurityCode.index, //9
    name: '4 digit security code',
    description: "The security code associated with this password, typical for Amex credit cards, must be 4 numbers",
    hintText: "Enter a security code",
    errorText: "must contain at exactly 3 numbers",
    length: 4,
    validationIndex: Validators.requiredAndLength.index,
    formatterIndex: Formatters.justNumberFormatter.index,
    previousEnabled: true,
    nextEnabled: true,
    addEnabled: true,
    removeEnabled: false,    
  ),   
  PasswordField(
    id: PasswordFieldsNumbers.phoneNumber.index, //10
    name: 'phone number',
    description: "The phone number associated with this password, typical of some websites and applications, it must contain at least 3 numbers and no more than 16, can contain spaces",
    hintText: "Enter a phone number",
    errorText: "must be a valid phone number between 3 to 16 numbers, can contain spaces",
    length: 3,
    validationIndex: Validators.requiredAndLength.index,
    formatterIndex: Formatters.mobileNumberFormatter.index,
    previousEnabled: true,
    nextEnabled: true,
    addEnabled: true,
    removeEnabled: false,    
  ),  
  PasswordField(
    id: PasswordFieldsNumbers.name.index, //11
    name: 'name',
    description: "The name associated with this password, can be any name and no validation is required except it must contain at least 3 characters",
    hintText: "Enter a name",
    errorText: "must contain at least 3 characters",
    length: 3,
    validationIndex: Validators.requiredAndLengthMaxSet.index,
    previousEnabled: true,
    nextEnabled: true,
    addEnabled: true,
    removeEnabled: false,    
  ),
  PasswordField(
    id: PasswordFieldsNumbers.cardNumber.index, //12
    name: 'card number',
    description: "The Credit card number associated with this password, this must be a valid credit card number",
    hintText: "Enter a credit card number",
    errorText: "must contain a valid credit card number",
    length: 19,
    validationIndex: Validators.debitCardValidation.index,
    formatterIndex: Formatters.debitCardFormatter.index,
    previousEnabled: true,
    nextEnabled: true,
    addEnabled: true,
    removeEnabled: false,    
  ),
  PasswordField(
    id: PasswordFieldsNumbers.amexCardNumber.index, //13
    name: 'amex card number',
    description: "The Amex Credit card number associated with this password, this must be a valid Amex Credit card number",
    hintText: "Enter a credit card number",
    errorText: "must contain a valid amex credit card number",
    length: 17,
    validationIndex: Validators.debitCardValidation.index,
    formatterIndex: Formatters.amexCardFormatter.index,
    previousEnabled: true,
    nextEnabled: true,
    addEnabled: true,
    removeEnabled: false,    
  ),  
  PasswordField(
    id: PasswordFieldsNumbers.expiryDate.index, //14
    name: 'expiry date',
    description: "The expiry date associated with the credit card that is associated with this password, this must be a valid date, however validation is not totally strict",
    hintText: "Enter an expiry date",
    errorText: "must contain at least 4 digits",
    length: 5,
    validationIndex: 1,
    formatterIndex: 4,
    previousEnabled: true,
    nextEnabled: true,
    addEnabled: true,
    removeEnabled: false,    
  ),
  PasswordField(
    id: PasswordFieldsNumbers.passcode.index, //15
    name: 'passcode',
    description: "The passcode associated with this password, typical for websites and applications, it must contain at least 3 characters",
    hintText: "Enter a passcode",
    errorText: "must contain at least 3 digits",
    length: 3,
    validationIndex: Validators.requiredAndLengthMaxSet.index,
    previousEnabled: true,
    nextEnabled: true,
    addEnabled: true,
    removeEnabled: false,    

  ), 
  PasswordField(
    id: PasswordFieldsNumbers.notes.index, //16
    name: 'notes',
    description: "This field is mandatory and contains free form text",
    hintText: "Enter your notes",
    errorText: "must contain at least 3 digits",
    length: 0,
    validationIndex: -1,
    previousEnabled: true,
    nextEnabled: false,
    addEnabled: false,
    removeEnabled: false,
  ),                    
];